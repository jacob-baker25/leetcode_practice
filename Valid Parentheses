"""
Problem: Valid Parentheses
Difficulty: Easy
Link: https://leetcode.com/problems/valid-parentheses/

Goal:
-Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

Approach: 
- First defined a variable for each type of parentheses
- goes through the string, adding 1 for each opeing parenthese, subtracting one
  for each closing one
- in the end, if each opening has a close, each variable should be at zero

- Time complexity: O(n)
- Space complexity: O(1)

"""


class Solution:
    def isValid(self, s: str) -> bool:
        open_par = 0
        open_bracket = 0
        open_curly = 0

        for i in s:
            if i == '(':
                open_par+=1
            if i == '[':
                open_bracket+=1
            if i == '{':
                open_curly+=1
            if i == ')':
                open_par-=1
            if i == ']':
                open_bracket-=1
            if i == '}':
                open_curly-=1
                
        return open_par == open_bracket == open_curly == 0
